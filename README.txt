README

	ORMAnalyzer is a suite of tools for analyzing data produced by the ICARUS Side CRT Optical Readout Modules (ORMs). The ORM front-end boards (FEBs) The class "mppc" is used to analyzing the raw charge/time stamp data. It contains methods for calibrating each SiPM channel and fitting externally triggered spectra to extract light yield information.

CONTENTS
	Analyszer.exe - This executable handles processing of ORM test data, outputing a ROOT tree.
	mergeTrees.sh - This executable merges all indidual ORM pair output trees present in the 'Trees' directory, and outputs a file called 'merged<ctr>.root' also into 'Trees'. <ctr> is the number of files merged.
	AnaDir  - This directory contains a directory for each ORM pair with .txt files holding output from LY fitting.
	CalDir  - This directory contains fit initializer data (top level) and one directory for each ORM pair with .txt files holding fit data from calibration.
	Plots   - This directory contains one subdirectory for each ORM pair with two subdirectories: Cal and LY. These hold plots from generated during the calibrating and light yield fitting respectively.
	Trees   - This directory contains one ROOT tree for each ORM pair test that ben processed. It also contains trees which are the result of merging individual ORM pair trees.
	TreeAna - This directory contains code for analyzing the trees generated by 'Analyzer.exe'
	src     - Source code.

CONFIGURATION	
	config.txt allows the user to specify which FEBs and channels are processed. For each FEB, channel set, enter a new line in config.txt with the format
	<mac5>: <ch A> <ch B> <ch C> '\n'

TO RUN
	In the working directory, simply run the exectutable ./Analyzer.exe . You will be prompted to enter 5 values: the run number, the two tested ORMs' serial numbers, and the relative self-trigger efficiencies. 


ANALYZER OUTPUT TREE VARIABLES
 tree structure: one entry per FEB (6 total)

 // global values (same for each entry) //
 run -------------- run number assigned to each ORM pair tested
 ormN ------------- north test ORM ID (ORM read out by FEB mac5 86)
 ormS ------------- south test ORM ID (ORM read out by FEB mac5 214)
 effN ------------- relative efficiency of north test ORM
 effS ------------- relative efficiency of south test ORM
 // entry specific values //
 mac5 ------------- FEB ID, different for each entry
 //   arrays [32], index is FEB channel number  //
 chConfig --------- bools, true if channel connected to SiPM
 gain ------------- gains from calibration (gain) fits in ADC/photoelectron, gain=0 if no SiPM connected
 gainErr ---------- error in gain from fit for each channel in ADC/photoelectron
 gainPed ---------- pedestal mean according to gain fit (seperate from pedestal fit) in ADC
 gainPedErr ------- error in pedestal mean according to gain fit in ADC
 gainChisqr ------- chi-squared from gain fit
 gainNDF ---------- statistical degrees of freedom from gain fit
 pedMean ---------- mean of pedestal from calibration (pedestal) fit in ADC, performed for all 32 channels
 pedMeanErr ------- error in pedestal mean from fit in ADC
 pedSigma --------- sigma of pedestal from fit in ADC
 pedSigmaErr ------ error in pedestal sigma from fit in ADC
 pedConst --------- normalization constant of pedestal from fit
 pedConstErr ------ error in normalization constant of pedestal from fit
 lyNFit ----------- number of entries used in light yield spectrum fit
 lyPeak ----------- value of peak (most probable) light yield in photoelectrons
 lyPeakErr -------- error in light yield peak value from number of entries and fit FWHM in photoelectrons
 lyFWHM ----------- light yield fit FWHM in photoelectrons
 lyLandauWidth ---- width of landau function used in light yield fit function convolution in photoelectrons
 lyLandauWidthErr - error of landau width from fit in photoelectrons
 lyLandauMPV ------ most probable value of landau used in light yield fit function convolution in photoelectrons
 lyLandauMPVErr --- error in most probable value of landau from fit
 lyNorm ----------- normalization constant of light yield fit function
 lyNormErr -------- error in normalization constant from fit
 lyGaussSigma ----- std. dev. of gaussian used in light yield fit function convolution
 lyGaussSigmaErr -- error in gaussian std. dev. from fit
 

